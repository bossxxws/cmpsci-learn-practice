/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-09-25 14:24:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script>\r\n");
      out.write("	function aa()\r\n");
      out.write("	{\r\n");
      out.write("		if(form1.gender[0].checked==true)\r\n");
      out.write("		{\r\n");
      out.write("			alert(form1.gender[0].value)\r\n");
      out.write("		}\r\n");
      out.write("		else if(form1.gender[1].checked==true)\r\n");
      out.write("		{\r\n");
      out.write("			alert(form1.gender[1].value)\r\n");
      out.write("		}\r\n");
      out.write("		else\r\n");
      out.write("		{\r\n");
      out.write("			alert(\"您未选择性别\")\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- chapter1 -->\r\n");

int a=5;
for(int i=1;i<=a;i++)
{
      out.write("\r\n");
      out.write("<a href=2.jsp?id=");
      out.print(i);
      out.write(" target=window_name> 商品 ");
      out.print(i );
      out.write("</a> <br> ");
 
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- chater 2 -->\r\n");
      out.write("<form action=\"3.jsp\" method=\"post\" name=\"form1\">\r\n");
      out.write("请您输入用户名：<input type =\"text\" id=\"id1\" value=\"默认值\" name=\"id\" size=2><br>\r\n");
      out.write("请您输入密码：  <input type = \"password\" name=\"ps\"><br>\r\n");
      out.write("请您输入性别：<input type=\"radio\" name = \"gender\" value=\"nan\">男\r\n");
      out.write("<input type=\"radio\" name = \"gender\" value=\"nv\"> 女 <br>\r\n");
      out.write("\r\n");
      out.write("请输入您的爱好：<input type = \"checkbox\" name = \"hobby\" value = \"zuqiu\">足球\r\n");
      out.write("<input type = \"checkbox\" name = \"hobby\" value = \"paiqiu\">排球\r\n");
      out.write("<input type = \"checkbox\" name = \"hobby\" value = \"lanqiu\">篮球<br>\r\n");
      out.write("<input type=\"file\" name=\"f1\"><br>\r\n");
      out.write("<input type=\"hidden\" name=\"h1\" value=\"h1\">\r\n");
      out.write("请输入您的籍贯：\r\n");
      out.write("<select name=\"jg\" multiple size=2>\r\n");
      out.write("<option value=\"heilongjiang\">黑龙江</option>\r\n");
      out.write("<option value=\"jilin\">吉林</option>\r\n");
      out.write("<option value=\"liaoning\">辽宁</option>\r\n");
      out.write("<option value=\"henan\">河南</option> \r\n");
      out.write("</select><br>\r\n");
      out.write("\r\n");
      out.write("<!-- 搭配html表单编辑器可以给输入区域增加小工具(增加控件) -->\r\n");
      out.write("<textarea name=\"bianjiqi\" rows=\"10\" cols=\"10\"></textarea>\r\n");
      out.write("\r\n");
      out.write("<!-- 作业： -->\r\n");
      out.write("<!-- 写一个黑龙江选了之后有后面的框 -->\r\n");
      out.write("<!-- 吉林选了后面也有一个能选城市的框等等 -->\r\n");
      out.write("\r\n");
      out.write("<!-- 这里的文件只是提交文件名，并无法上传文件 -->\r\n");
      out.write("\r\n");
      out.write("<!-- form是表单的容器，看不见摸不着，但是有一个作用域 -->\r\n");
      out.write("<!-- 方法一般是get或者post -->\r\n");
      out.write("<!-- post 和 get的区别： -->\r\n");
      out.write("<!-- post对应的是to post方法 -->\r\n");
      out.write("<!-- get对应的是to get方法 -->\r\n");
      out.write("<!-- get刷新后自动提交（而且get是显式的提交） -->\r\n");
      out.write("<!-- post重复提交有提醒 -->\r\n");
      out.write("<!-- 所以一般用post来提交表单 -->\r\n");
      out.write("<!-- servlet就是类 -->\r\n");
      out.write("<!-- 下一个页面是通过name来找，当前页面是通过id来找 -->\r\n");
      out.write(" \r\n");
      out.write("<input type=\"submit\" value=\"重新提交\"> <input type=\"reset\">\r\n");
      out.write("<input type=\"button\" value=\"做点啥\" onclick=\"aa()\">\r\n");
      out.write("<!-- 能选的不能输，防止造成统计学上的难以区分，造成错误 -->\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
