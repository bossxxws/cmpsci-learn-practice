/*
维护一个字符串集合，支持两种操作：

I x 向集合中插入一个字符串 x
；
Q x 询问一个字符串在集合中出现了多少次。
共有 N个操作，所有输入的字符串总长度不超过 1e5
，字符串仅包含小写英文字母。

输入格式
第一行包含整数 N
，表示操作数。

接下来 N
 行，每行包含一个操作指令，指令为 I x 或 Q x 中的一种。

输出格式
对于每个询问指令 Q x，都要输出一个整数作为结果，表示 x
 在集合中出现的次数。

每个结果占一行。

数据范围
1≤N≤2?104
输入样例：
5
I abc
Q abc
Q ab
I ab
Q ab
输出样例：
1
0
1
*/

#include<bits/stdc++.h>

using namespace std;

const int N=1e5+10;

char str[N];

int son[N][26],cnt[N],idx;//下标是0的点，既是根节点，又是空节点
//idx为每一个节点分配唯一的标识符 



void insert(char str[])
{
	int p=0;
	for(int i=0;str[i];i++)
	{
		int u=str[i]-'a';
		if(!son[p][u]) son[p][u]= ++ idx;
		p=son[p][u];
	}
	cnt[p]++;
} 

int query(char str[])
{
	int p=0;
	for(int i=0;str[i];i++)
	{
		int u=str[i]-'a';
		if(!son[p][u])return 0;
		p=son[p][u];
	}
	return cnt[p];
}


int main()
{
	int n;
	cin>>n;
	while(n--)
	{
		char op[2];
		cin>>op>>str;
		if(op[0]=='I')insert(str);
		else cout<<query(str)<<endl;
    }
	return 0;
}
